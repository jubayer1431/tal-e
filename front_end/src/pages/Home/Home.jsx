import React, { useEffect, useState } from 'react';
import { FormField, Loader, RenderCards } from './../../components';

const Home = () => {
	const [loading, setLoading] = useState(false);
	const [allPosts, setAllPosts] = useState(null);
	const [searchText, setSearchText] = useState('');
	const [searchedResults, setSearchedResults] = useState(null);
	const [searchTimeout, setSearchTimeout] = useState(null);

	useEffect(() => {
		const fetchPosts = async () => {
			try {
				setLoading(true);
				const res = await fetch('http://localhost:8080/api/v1/posts', {
					method: 'GET',
					headers: {
						'Content-Type': 'application/json',
					},
				});
				const { data } = await res.json();
				setAllPosts(data.reverse());
			} catch (error) {
				alert(error);
			} finally {
				setLoading(false);
			}
		};

		fetchPosts();
	}, []);

	const handleSearchChange = (e) => {
		clearTimeout(searchTimeout);
		setSearchText(e.target.value);

		// This timeout function will prevent prevent search results for every keystroke within 0.5s
		setSearchTimeout(
			setTimeout(() => {
				const searchResults = allPosts.filter(
					(post) =>
						post.name.toLowerCase().includes(searchText.toLowerCase()) ||
						post.prompt.toLowerCase().includes(searchText.toLowerCase())
				);
				setSearchedResults(searchResults);
			}, 500)
		);
	};

	return (
		<section className='max-w-7xl mx-auto'>
			<div>
				<h1 className='font-extrabold text-gray-50 text-[32px]'>
					The Community Showcase
				</h1>
				<p className='mt-2 text-gray-300 text-[16px] max-w-lg'>
					Browse through a collection of imaginative and visually stunning
					images generated by DALL-E AI.
				</p>
			</div>
			<div className='mt-16'>
				<FormField
					labelName={'Search'}
					placeholder='search posts'
					value={searchText}
					type='text'
					handleChange={handleSearchChange}
				/>
			</div>
			<div className='mt-10'>
				{loading ? (
					<div className='flex justify-center items-center'>
						<Loader />
					</div>
				) : (
					<>
						{searchText && (
							<h2 className='font-medium text-gray-400 text-xl mb-3'>
								Showing results for{' '}
								<span className='text-gray-200'>{searchText}</span>
							</h2>
						)}

						<div className='grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3'>
							{searchText ? (
								<RenderCards
									posts={searchedResults}
									title='No search result found'
								/>
							) : (
								<RenderCards
									posts={allPosts}
									title={allPosts?.length ? 'All posts' : 'No Posts Found'}
								/>
							)}
						</div>
					</>
				)}
			</div>
		</section>
	);
};

export default Home;
